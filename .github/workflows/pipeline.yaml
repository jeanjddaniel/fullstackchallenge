name: CI CD Pipeline

on:
  pull_request:
    branches:
      - devel
      - stage
      - prod
  push:
    branches:
      - devel
      - stage
      - prod

jobs:
  CI:
    name: CI
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Validate PR
        run: |
          TARGET="${{ github.base_ref }}"
          SOURCE="${{ github.head_ref }}"

          case "$TARGET" in
            devel)
              if [[ "$SOURCE" != feature/* && "$SOURCE" != bugfix/* ]]; then
                echo "Only feature and bugfix branchs can open PR for devel"
                exit 1
              fi
              ;;
            stage)
              if [[ "$SOURCE" != devel ]]; then
                echo "Only devel branch can open PR for stage"
                exit 1
              fi
              ;;
            prod)
              if [[ "$SOURCE" != stage ]]; then
                echo "Only stage branch can open PR for prod"
                exit 1
              fi
              ;;
          esac

      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "15"

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

      - name: Run formatter
        run: npm run prettier

      - name: Run tests
        env:
          CI: true
        run: npm run test

      - name: Build project
        run: npm run build

  CD:
    name: CD
    if: github.event_name == 'push' && (github.ref_name == 'devel' || github.ref_name == 'stage' || github.ref_name == 'prod')
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set Up terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform-version: 1.3.9

      - name: Configure AWS credentials
        uses: aws-actions/Configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform init
        run: terraform init -backend-config="key=${GITHUB_REF_NAME}/terraform.tfstate"
        working-directory: terraform

      - name: terraform destroy
        run: terraform destroy -auto-approve -var="env=${{ github.ref_name }}"
        working-directory: terraform
